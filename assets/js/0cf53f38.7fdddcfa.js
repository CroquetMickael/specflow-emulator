"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[634],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=l(t),u=r,m=h["".concat(p,".").concat(u)]||h[u]||d[u]||i;return t?a.createElement(m,s(s({ref:n},c),{},{components:t})):a.createElement(m,s({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=h;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},2926:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return h}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),s=["components"],o={sidebar_position:4},p="Shared step",l={unversionedId:"Features/shared-step",id:"Features/shared-step",title:"Shared step",description:"Shared step in the same feature file",source:"@site/docs/Features/shared-step.md",sourceDirName:"Features",slug:"/Features/shared-step",permalink:"/specflow-emulator/docs/Features/shared-step",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Features/shared-step.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Same step with different keyword",permalink:"/specflow-emulator/docs/Features/same-step-with-diffrent-keyword"},next:{title:"Multiple feature for one entry point",permalink:"/specflow-emulator/docs/Features/steps-file-entrypoint"}},c=[{value:"Shared step in the same feature file",id:"shared-step-in-the-same-feature-file",children:[],level:2},{value:"Shared step between feature files",id:"shared-step-between-feature-files",children:[],level:2}],d={toc:c};function h(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"shared-step"},"Shared step"),(0,i.kt)("h2",{id:"shared-step-in-the-same-feature-file"},"Shared step in the same feature file"),(0,i.kt)("p",null,"Let's imagine this feature file :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Feature: A simple feature file\n\n    Scenario: First scenario\n        Given given step\n        When when step shared\n        Then then step\n\n    Scenario: Second scenario\n        Given given step 2\n        When when step shared\n        Then then step 2\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"specflow-emulator")," provide a new way to create shared steps in the same feature file. Using ",(0,i.kt)("inlineCode",{parentName:"p"},"jest-cucumber")," would require to create multiple function like this :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'  const aSharedStep = (when) => {\n      when("when step shared", () => {\n        // do something\n      })\n    }\n\n test("A scenario", ({\n    given,\n    when,\n    then,\n  }) => {\n  given("given step",\n      () => {\n        // this do something\n      },\n    );\n\n    aSharedStep(when);\n\n    then("then step",\n      () => {\n        // do something else\n      },\n    );\n  }\n\n  test("A scenario 2", ({\n    given,\n    when,\n    then,\n  }) => {\n\n  given("given step 2",\n      () => {\n        // this do something\n      },\n    );\n\n    aSharedStep(when);\n\n    then("then step 2",\n      () => {\n        // do something else\n      },\n    );\n  }\n')),(0,i.kt)("p",null,"Sometimes, you will have a lot more scenario case. Using this method is painfull for the readibility, finding the function, where it have been declared, etc."),(0,i.kt)("p",null,"With ",(0,i.kt)("inlineCode",{parentName:"p"},"specflow-emulator"),", you will just have to declare one time your steps, like this :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { defineSteps } from "specflow-emulator"\n\nexport const stepDefinitions = defineSteps(\n  [{ feature: "A simple feature file "}],\n  ({ Given, Then, When }) => {\n\n      Given("given step", scenarioContext => data => {\n         // do something\n      })\n\n      When("When Step", () => () => {\n        // do something\n      })\n\n      Then("Then step", scenarioContext => () => {\n          // do something else\n      })\n  }\n')),(0,i.kt)("p",null,"You don't need to do anything else, the pool will automaticly bind your step."),(0,i.kt)("h2",{id:"shared-step-between-feature-files"},"Shared step between feature files"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"specflow-emulator")," allows to share steps between multiple feature files, based on a tag system. Let's imagine two feature files :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Feature: A simple feature file\n\n    Scenario: First scenario\n        Given given step\n        When when step shared\n        Then then step\n\n    Scenario: Second scenario\n        Given given step 2\n        When when step shared\n        Then then step 2\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Feature: A simple feature file 2\n\n    Scenario: First scenario\n        Given given step\n        When when step shared\n        Then then step\n\n    Scenario: Second scenario\n        Given given step 2\n        When when step shared\n        Then then step 2\n")),(0,i.kt)("p",null,"Here we have the same ",(0,i.kt)("inlineCode",{parentName:"p"},"When")," step shared between those two feature. In ",(0,i.kt)("inlineCode",{parentName:"p"},"jest-cucumber")," you will need to create a file and the export the function of the step in order to reuse it.\nIn ",(0,i.kt)("inlineCode",{parentName:"p"},"specflow-emulator"),", you can create a ",(0,i.kt)("inlineCode",{parentName:"p"},"shared.common.stepdefinitions.js")," and then just declare it this way :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { defineSteps } from "__features__/specflowEmulator";\n\nexport const stepDefinitions = defineSteps([{ tag: "tagName" }], ({ When }) => {\n  When("when step shared", scenarioContext => () => {\n    // do something\n  });\n});\n')),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Same tag name")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Don't create the same tag in multiple stepdefinitions file, the library won't know which step to use."))),(0,i.kt)("p",null,"And then just use it like this in your feature files :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"@tagName\nFeature: A simple feature file\n\n    Scenario: First scenario\n        Given given step\n        When when step shared\n        Then then step\n\n    Scenario: Second scenario\n        Given given step 2\n        When when step shared\n        Then then step 2\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"@tagName\nFeature: A simple feature file 2\n\n    Scenario: First scenario\n        Given given step\n        When when step shared\n        Then then step\n\n    Scenario: Second scenario\n        Given given step 2\n        When when step shared\n        Then then step 2\n")),(0,i.kt)("p",null,"That's all, you've just shared step between your feature files \ud83d\ude00 !"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Multiple tags")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can add multiple tag for the same file !"))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Share step from any stepdefinitions file")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can also share step from any stepdefinitions, just add a tag like above."))))}h.isMDXComponent=!0}}]);