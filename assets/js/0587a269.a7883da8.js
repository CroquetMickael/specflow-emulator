"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[197],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1815:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},c="Scenario Context",u={unversionedId:"Features/scenario-context",id:"Features/scenario-context",title:"Scenario Context",description:"specflow-emulator give you access to a scenario context, a new way to share data between steps. By default in cucumber or jest-cucumber you would create a variable at the start of the test file in order to provide it anywhere else in the test file.",source:"@site/docs/Features/scenario-context.md",sourceDirName:"Features",slug:"/Features/scenario-context",permalink:"/docs/Features/scenario-context",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Features/scenario-context.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Create your first test",permalink:"/docs/create-your-first-test"},next:{title:"Same step with different keyword",permalink:"/docs/Features/same-step-with-diffrent-keyword"}},l=[{value:"Information",id:"information",children:[],level:4}],p={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scenario-context"},"Scenario Context"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"specflow-emulator")," give you access to a scenario context, a new way to share data between steps. By default in ",(0,o.kt)("inlineCode",{parentName:"p"},"cucumber")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"jest-cucumber")," you would create a variable at the start of the test file in order to provide it anywhere else in the test file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const { defineFeature, loadFeature } = require(\'jest-cucumber\');\n\nconst sharedData;\nconst feature = loadFeature(\'./myScenario.feature\', {\n  loadRelativePath: true,\n});\n\ntest("My scenario", ({\n    given,\n    when,\n    then,\n  }) => {\n\n    given("do something", (data) => {\n           sharedData = data\n    });\n\n    then("Use shared data", () => {\n      expect(sharedData).toBe(data)\n    });\n  }\n')),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"specflow-emulator"),", you just have to use in your step the ",(0,o.kt)("inlineCode",{parentName:"p"},"scenarioContext")," object. It will automaticly share data between your steps. Let's take the previous example and convert it to use ",(0,o.kt)("inlineCode",{parentName:"p"},"specflow-emulator")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"scenarioContext"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { defineSteps } from "specflow-emulator"\n\nexport const stepDefinitions = defineSteps(\n  [{ feature: "My feature"}],\n  ({ Given, Then, When }) => {\n\n      Given("do something", (scenarioContext) => (data) => {\n          // Here you can create variable inside the scenario context\n          // It\'s an object, do what you want with it\n          scenarioContext.sharedData = data\n      })\n\n      Then("Use shared data", (scenarioContext) => () => {\n        // You will be able to access the object values in the other steps\n          expect(scenarioContext.sharedData).toBe(data)\n      })\n  }\n')),(0,o.kt)("h4",{id:"information"},"Information"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Exporting")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Scenario context is bound to the current scenario, you can't share data between scenarios."))),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Spreading")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Never spread the scenario context inside the first callback, it could permit some bug."))))}d.isMDXComponent=!0}}]);